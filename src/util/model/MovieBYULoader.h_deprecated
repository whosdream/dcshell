///////////////////////////////////////////////////////////////////////////////////////////
// This file defines a Movie.BYU format fileloader


#ifndef _MOVIEBYULOADER_H_
#define _MOVIEBYULOADER_H_

#include "ILoadable.h"
#include <fstream>
using namespace std;

class CMovieBYULoader : public ILoadable
{
public:

	//////////////////////////////////////////////////////////////////////////////////////
	CMovieBYULoader()
	{
		m_PartsSize=m_VertexSize=m_PolygonSize=m_EdgeSize=0;
	}

	//////////////////////////////////////////////////////////////////////////////////////
	// Implemetation of ILoadable interface
	//////////////////////////////////////////////////////////////////////////////////////
	virtual bool ParseFile();

	//////////////////////////////////////////////////////////////////////////////////////
	// Implemetation of IPolygonal interface
	//////////////////////////////////////////////////////////////////////////////////////
	int GetVertices(PtVector& v) const{ v=points; return v.size(); }
	int GetTriangles(TriVector& v) const{ v=triangles; return v.size(); }
	const PtVector & GetVertices() const{ return points; }
	const TriVector & GetTriangles() const{ return triangles; }
	const PartVector& GetParts() const { return parts; }

////////////////////////////////////////////////////////////////////////////////////////////
//
//	Protected Methods and data members
//
////////////////////////////////////////////////////////////////////////////////////////////
protected:
	virtual bool CheckCurrentStatus();

////////////////////////////////////////////////////////////////////////////////////////////
//
//	Private Methods and data members
//
////////////////////////////////////////////////////////////////////////////////////////////
private:
	bool ParseSection1(ifstream & in);
	bool ParseSection2(ifstream & in);
	bool ParseSection3(ifstream & in);

	int m_PartsSize,m_VertexSize,m_PolygonSize,
		m_EdgeSize;

	PartVector parts;
	PtVector points;
	TriVector triangles;
};

#endif
